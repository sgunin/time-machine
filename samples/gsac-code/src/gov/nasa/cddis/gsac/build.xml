<?xml version="1.0" encoding="UTF-8"?>

<!-- 
     This build script assumes the source tree is structured as:
     base_directory/
             src
             lib
             dist (this gets created by the build)
    The basedir (below) needs to be set to the base_directory relative to this build.xml
    The localinit target defines the properties for the build. These properties need to be changed.
    
    The default build target is test_build. This copies the dbresources/gsacdb_test.properties file 
    to resources/gsacdb.properties and makes a .zip and .war in the dist dir

    Once run you can run the server with:
    ant runserver
-->

<project basedir="../../../../.." default="test_build" name="GSAC Build">

    <target name="localinit">
<!-- base name for build products -->
        <property name="basename" value="gsaccddis"/>

<!-- Where the main source dir is at (relative to the top level src dir) -->
        <property name="repository_relative_dir" value="gov/nasa/cddis/gsac"/>
        <property name="repositorypackage" value="gov.nasa.cddis.gsac"/>

        <property name="serverclass" value="${repositorypackage}.CddisServer"/>
        <property name="repositoryclass" value="${repositorypackage}.CddisRepository"/>

<!-- The root of the Tomcat URL -->
        <property name="urlroot" value="/gsacws"/>

    </target>


    <target name="init" depends="localinit">
        <property name="build" value="test"/>
        <property name="version" value="1.0"/>
        <property name="package" value="${basename}${build}${version}"/>

        <property name="distdir" value="${basedir}/dist"/>
        <mkdir dir="${distdir}"/>
        <property name="jardir" value="${distdir}"/>
        <property name="srcdir" value="${basedir}/src"/>
        <property name="libdir" value="${basedir}/lib"/>
        <property name="reldir" value="${distdir}/${package}"/>

        <property name="repositorydir" value="${srcdir}/${repository_relative_dir}"/>

        <property name="jarfile" value="${package}.jar"/>
        <property name="warfile" value="gsacws.war"/>
        <property name="srcjarfile" value="${basename}${version}_src.jar"/>
        <property name="zipfile" value="${distdir}/${package}.zip"/>


        <property name="commons-pool.jar" value="commons-pool-1.5.5.jar"/>
        <property name="commons-dbcp.jar" value="commons-dbcp-1.4.jar"/>
        



        <property name="classpath" value="${srcdir}:${libdir}/mysql.jar:${libdir}/${commons-dbcp.jar}:${libdir}/${commons-pool.jar}:${libdir}/log4j-1.2.15.jar:${libdir}/servlet-api.jar:${libdir}/gsacws.jar:${libdir}/ramaddautil.jar:${libdir}/unidatautil.jar:${libdir}/jetty.jar:${libdir}/jetty-util.jar:${libdir}/gson-1.5.jar"/>




        <property name="build.sysclasspath"    value="ignore" />

        <!-- javac flags -->
        <property name="javac.failonerror" value="true"/>
        <property name="javac.fork" value="true"/>
        <property name="javac.maxmemory" value="512m"/>
    </target>


    <target name="test_build">
        <property name="build" value="test"/>
        <antcall target="build"/>
        <echo message="********************************"/>
        <echo message="To run the server run:"/>
        <echo message="ant runserver"/>
        <echo message="********************************"/>
    </target>

    <target name="production_build">
        <property name="build" value="production"/>
        <antcall target="build"/>
    </target>


    <target name="build" depends="init,clean">
        <echo message="Creating ${build} build"/>

<!-- Uncomment this line if you want to build the gsacws.jar everytime 
        <ant antfile="${srcdir}/org/gsac/gsl/build.xml" target="gsacjar"/>
-->

        <property name="db.properties" value="${repositorydir}/dbresources/gsacdb_${build}.properties"/>
        <copy overwrite="true"    file="${db.properties}"  
                 tofile="${repositorydir}/resources/gsacdb.properties" />
        <property name="server.properties" value="${repositorydir}/resources/gsacserver_${build}.properties"/>
        <copy overwrite="true"    file="${server.properties}"  
                 tofile="${repositorydir}/resources/gsacserver.properties" />
        <antcall target="release"/>
        <antcall target="war"/>
    </target>


    <target name="gsacjar" depends="init,clean,compile">
        <echo message="Making jar ${jardir}/${jarfile}"/>
        <jar 
            basedir="${srcdir}"
            update="false"
            compress="true"
            jarfile="${jardir}/${jarfile}">
            <include name="org/**/*.class"/>
            <include name="gov/**/*.class"/>
            <include name="edu/**/*.class"/>
            <include name="${repository_relative_dir}/resources/**/*"/>
           <manifest>
              <attribute name="Implementation-Title" value="Stand alone GSAC server"/>
              <attribute name="Implementation-Version" value="1.0"/>
              <attribute name="Implementation-Vendor" value="${basename}"/>
              <attribute name="Main-class" value="${serverclass}"/>
              <attribute name="Class-Path" value="gsacws.jar ramaddautil.jar unidatautil.jar  jetty.jar jetty-util.jar gson-1.5.jar servlet-api.jar mysql.jar ${commons-dbcp.jar} ${commons-pool.jar} log4j-1.2.15.jar"/>
            </manifest> 
        </jar>
    </target>


    <target name="compile" depends="init">
        <javac
            classpath="${classpath}"
            verbose="false"
            debug="true"
            deprecation="false" 
            nowarn="true"
            srcdir="${srcdir}"
            failonerror="${javac.failonerror}"
            fork="${javac.fork}"
            memoryMaximumSize="${javac.maxmemory}"
            target="1.5">

        <include name="${repository_relative_dir}/**/*.java"/>
        </javac>
    </target>

   <target  name="release" depends="init,clean,gsacjar">
        <echo message="Making ${zipfile}"/>
        <delete includeemptydirs="true" dir="${reldir}"/>
        <mkdir dir="${reldir}"/>
        <property name="reldirlib" value="${reldir}"/>
        <mkdir dir="${reldirlib}"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="dist/${jarfile}"/>
        <copy overwrite="true"  todir="${reldir}"     file="${libdir}/gsacws.jar"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="${libdir}/ramaddautil.jar"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="${libdir}/unidatautil.jar"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="${libdir}/jetty.jar"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="${libdir}/jetty-util.jar"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="${libdir}/gson-1.5.jar"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="${libdir}/servlet-api.jar"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="${libdir}/mysql.jar"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="${libdir}/${commons-dbcp.jar}"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="${libdir}/${commons-pool.jar}"/>
        <copy overwrite="true"  todir="${reldirlib}"  file="${libdir}/log4j-1.2.15.jar"/>

        <copy overwrite="true"  todir="${reldir}"  file="${repositorydir}/release/README"/>
        <copy overwrite="true"  todir="${reldir}"  file="${repositorydir}/gsacrepository.sh">
          <filterset>
            <filter token="JARFILE" value="${jarfile}"/>
          </filterset>
        </copy>
        <zip destfile="${zipfile}" >
            <zipfileset dir="${reldir}" prefix="${package}"/>
       </zip>
   </target>


    <target name="runserver" depends="init">
      <java classname="org.gsac.gsl.GsacServer" maxmemory="512mb">
          <arg value="-port"/>
          <arg value="8082"/>
          <arg value="-Dgsac.repository.class=${repositoryclass}"/>
          <classpath>
             <pathelement path="${classpath}"/>
             <pathelement location=""/>
         </classpath>
     </java>
   </target>



    <target name="tables" depends="init">
      <java classname="${repositorypackage}.CddisDatabaseManager" maxmemory="512mb">
          <classpath>
             <pathelement path="${classpath}"/>
             <pathelement location=""/>
         </classpath>
     </java>
   </target>


    <target name="war" depends="init">
      <delete>
           <fileset file="${distdir}/${warfile}"/>
       </delete>
       <property name="reldir" value="${distdir}/${package}"/>
        <copy overwrite="true"  tofile="${distdir}/web.xml"  file="${repositorydir}/release/web.xml">
          <filterset>
            <filter token="MACRO.URLROOT" value="${urlroot}"/>
          </filterset>
        </copy>
        <delete file="${reldir}/servlet-api.jar"/>
        <war webxml="${distdir}/web.xml" destfile="${distdir}/${warfile}">
          <lib dir="${reldir}"/>
        </war>
    </target>

    <target name="clean" depends="init" >
        <delete>
            <fileset dir="${srcdir}" includes="**/*.class"/>
        </delete>
    </target>


   <target name="purge" depends="init,clean" >
        <delete dir="${distdir}"/>
   </target>


    <target name="srcrelease" depends="init,clean">
        <echo message="Making src jar ${jardir}/${srcjarfile}"/>
        <delete file="${repositorydir}/resources/gsacdb.properties"/>
        <jar 
            basedir="${srcdir}"
            update="false"
            compress="true"
            jarfile="${jardir}/${srcjarfile}">

            <include name="${repository_relative_dir}/**/*"/>
<!-- don't include the production properties file since this has real passwords -->
            <exclude name="${repository_relative_dir}/dbresources/gsacdb_production.properties"/>

            <include name="org/unavco/database/**/*.java"/>
        </jar>
    </target>



</project>
