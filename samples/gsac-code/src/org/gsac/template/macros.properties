##
## Properties used to generate a new GSAC repository. This is a template or model for a similar file to make a new GSAC installation.
##
## Make a new version of this file with a different file name, which will be used to automatically build the initial version of your GSAC installation.
## See instructions in the GSAC package, in the file src/org/gsac/README.
##

## To name the repository; spaces are allowed; can use any character string.
## You may include the agency or data center name, such as The University of Shangri-La GSAC Repository.
target.name=Myrepo GSAC Repository

## This is used to create the jar and war release file names. No spaces.
target.basename=myrepogsac

## A standard Java package name.  Replace the 'agency' part, with the name of your agency or organization, making for example gov.nasa.gsac.  
## If your agency is not an "org", use the appropriate value such as it., gr., pt., fr., is., edu., gov., etc.
## Also, this names and creates the new directory path to hold your GSAC installation code, from the name after the first "."
target.package=org.myrepo.gsac

## For Java file names: All of the new Java .java files and .class files for your GSAC installation will have the following prefix for their names.
## Create a short name for your data repository, something like Myrepo.  
## Use no spaces, and with only the first letter in upper case, to match Java class naming conventions.
target.prefix=Myrepo

## Choose which Java database driver (in GSAC) to read the database your GSAC code will read.  Choose (uncomment) one of these three:
target.dbdriver=mysql.jar
#target.dbdriver=oracleDriver.jar
#target.dbdriver=postgres.jar
